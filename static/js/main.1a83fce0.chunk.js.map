{"version":3,"sources":["components/logo/logo.component.jsx","components/site-nav/site-nav.component.jsx","components/color-mode/ColorModeSwitcher.js","components/header/header.component.jsx","components/footer/footer.component.jsx","services/userService.js","components/user-list/user-list.component.jsx","pages/users/users.component.jsx","pages/user-details/user-details.component.jsx","pages/user-edit/user-edit.component.jsx","hooks/useCustomForm.js","pages/user-create/user-create.component.jsx","pages/login/login.component.jsx","components/layouts/base-layout.component.jsx","components/layouts/page-container.component.jsx","hooks/useAuth.js","App.js","index.js"],"names":["Logo","as","size","fontWeight","p","RouterLink","to","MenuItem","children","rest","withRouter","props","isActive","path","location","pathname","d","className","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","fontSize","aria-label","variant","color","onClick","icon","Header","colorMode","bg","boxShadow","justify","align","w","maxW","h","mx","justifySelf","Footer","href","target","rel","endpoint","userService","a","fetch","res","json","users","id","user","userData","method","body","JSON","stringify","headers","console","log","UserList","useState","setUsers","loading","setLoading","useEffect","getUsers","isNumeric","length","map","borderWidth","borderRadius","overflow","boxSize","objectFit","src","avatar","fallbackSrc","alt","fullName","state","email","colSpan","UsersPage","spacing","UserDetailsPage","UserEditPage","useCustomForm","initialValues","onSubmit","values","setValues","errors","setErrors","touched","setTouched","setOnSubmitting","setOnBlur","formRendered","useRef","current","handleChange","event","persist","name","value","handleBlur","handleSubmit","preventDefault","city","country","UserCreatePage","type","onChange","required","LoginPage","authToken","setAuthToken","setHasLogged","loginData","Error","err","alignItems","justifyContent","height","px","direction","maxWidth","mt","textAlign","mb","isRequired","placeholder","colorScheme","pt","borderBottom","borderColor","BaseLayout","minH","PageContainer","flex","useAuth","getItemFromStorage","item","typeOfStorage","itemString","getItem","itemValue","parse","localStorage","sessionStorage","hasLogged","userAuthToken","setItem","App","theme","exact","render","component","ReactDOM","document","getElementById"],"mappings":"6NAyBeA,EAjBF,WACX,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,GAAG,KACHC,KAAK,KACLC,WAAW,OACXC,EAAE,IAJJ,SAME,cAAC,IAAD,CAAMH,GAAII,IAAYC,GAAG,SAAzB,4B,yBCNFC,EAAW,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUF,EAAkB,EAAlBA,GAAOG,EAAW,iCAC9C,OACE,cAAC,IAAD,yBAAUL,EAAG,GAAOK,GAApB,aACE,cAAC,IAAD,CAAMR,GAAII,IAAYC,GAAIA,EAA1B,SAA+BE,QAwBtBE,eAnBC,SAACC,GACf,IAAMC,EAAW,SAAAC,GACf,OAAOF,EAAMG,SAASC,WAAaF,EAAO,mBAAqB,MAGjE,OACE,cAAC,IAAD,CACEZ,GAAG,MADL,SAGE,eAAC,IAAD,CACEe,EAAE,OADJ,UAGE,cAAC,EAAD,CAAUV,GAAG,SAASW,UAAWL,EAAS,UAA1C,mBACA,cAAC,EAAD,CAAUN,GAAG,gBAAgBW,UAAWL,EAAS,iBAAjD,iC,yBC5BKM,EAAoB,SAAAP,GAAU,IACjCQ,EAAoBC,cAApBD,gBACFE,EAAOC,YAAkB,OAAQ,SACjCC,EAAaD,YAAkBE,IAAQC,KAE7C,OACE,cAAC,IAAD,aACEvB,KAAK,KACLwB,SAAS,KACTC,aAAA,oBAAyBN,EAAzB,SACAO,QAAQ,QACRC,MAAM,UACNC,QAASX,EACTY,KAAM,cAACR,EAAD,KACFZ,K,SCkBKqB,EA9BA,WAAO,IACZC,EAAcb,cAAda,UACR,OACE,cAAC,IAAD,CACEhC,GAAG,SACHiC,GAAkB,UAAdD,EAAwB,QAAU,WACtCJ,MAAqB,UAAdI,EAAwB,QAAU,QACzCE,UAAU,qCAJZ,SAME,eAAC,IAAD,CACEC,QAAQ,gBACRC,MAAM,SACNC,EAAE,OACFC,KAAK,SACLC,EAAE,OACFC,GAAG,OACHrC,EAAE,YAPJ,UASE,cAAC,EAAD,IACA,eAAC,IAAD,CACEiC,MAAM,SACNK,YAAY,WAFd,UAGE,cAAC,EAAD,IACA,cAAC,EAAD,CAAmBtC,EAAG,aCLjBuC,EAtBA,WACb,OACE,cAAC,IAAD,CACE1C,GAAG,SACHiC,GAAG,WACHL,MAAM,QAHR,SAKE,cAAC,IAAD,CACES,EAAE,OACFC,KAAK,SACLnC,EAAE,cACFqC,GAAG,OACHD,EAAE,OALJ,SAOE,eAAC,IAAD,mBACS,cAAC,IAAD,CAAMX,MAAM,WAAWe,KAAK,8BAA8BC,OAAO,SAASC,IAAI,sBAA9E,sBADT,gB,gDChBFC,EAAW,0DAqCJC,EAAc,I,+HAlCzB,8BAAAC,EAAA,sEACoBC,MAAMH,GAD1B,cACQI,EADR,gBAEsBA,EAAIC,OAF1B,cAEQC,EAFR,yBAGSA,GAHT,2C,yHAMA,WAAqBC,GAArB,iBAAAL,EAAA,sEACoBC,MAAMH,EAAW,IAAMO,GAD3C,cACQH,EADR,gBAEqBA,EAAIC,OAFzB,cAEQG,EAFR,yBAGSA,GAHT,2C,sHAMA,WAAiBC,GAAjB,eAAAP,EAAA,sEACoBC,MAAMH,EAAU,CAChCU,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CAAE,eAAgB,sBAJ/B,OACQV,EADR,OAOEW,QAAQC,IAAIZ,GAPd,2C,oHAUA,WAAeG,GAAf,SAAAL,EAAA,0F,sHAIA,WAAiBK,GAAjB,eAAAL,EAAA,sEACoBC,MAAMH,EAAW,IAAMO,EAAI,CAC3CG,OAAQ,WAFZ,OACQN,EADR,OAIEW,QAAQC,IAAIZ,GAJd,2C,0FCmEaa,EA9EE,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdZ,EADc,KACPa,EADO,OAESD,oBAAS,GAFlB,mBAEdE,EAFc,KAELC,EAFK,KAgBrB,OAZAC,qBAAU,YACM,uCAAG,4BAAApB,EAAA,6DACfmB,GAAW,GADI,SAEKpB,EAAYsB,WAFjB,OAETjB,EAFS,OAGfS,QAAQC,IAAIV,GACZa,EAASb,GACTe,GAAW,GALI,2CAAH,qDAQdE,KACC,IAECH,EAEA,6CAKF,cAAC,IAAD,UACE,eAAC,IAAD,CAAOvC,QAAQ,SAAS1B,KAAK,KAA7B,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAIqE,WAAS,EAAb,gBACA,cAAC,IAAD,sBACA,cAAC,IAAD,wBACA,cAAC,IAAD,oBACA,cAAC,IAAD,iCAGJ,cAAC,IAAD,UAEqB,IAAjBlB,EAAMmB,OACJnB,EAAMoB,KAAI,SAAAlB,GACR,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAIgB,WAAS,EAAb,SAAehB,EAAKD,KACpB,cAAC,IAAD,UACE,cAAC,IAAD,CAAMrD,GAAII,IAAYC,GAAE,iBAAYiD,EAAKD,IAAzC,SACE,cAAC,IAAD,CAAKf,KAAK,QAAQmC,YAAY,MAAMC,aAAa,KAAKC,SAAS,SAA/D,SACE,cAAC,IAAD,CACEC,QAAQ,OACRC,UAAU,QACVC,IAAKxB,EAAKyB,QAAU,kCACpBC,YAAY,kCACZC,IAAG,6BAAwB3B,EAAK4B,kBAKxC,cAAC,IAAD,UACE,cAAC,IAAD,CAAMlF,GAAII,IAAYC,GAAE,iBAAYiD,EAAKD,IAAzC,SACGC,EAAK4B,aAGV,cAAC,IAAD,UAAK5B,EAAK6B,QACV,cAAC,IAAD,CAAIvD,MAAM,WAAV,SAAsB0B,EAAK8B,UArBpB9B,EAAKD,OA0BhB,cAAC,IAAD,UACE,cAAC,IAAD,CAAIgC,QAAQ,IAAZ,SACE,cAAC,IAAD,CAAM5D,SAAS,KAAKG,MAAM,WAAWQ,MAAM,SAA3C,sC,SChELkD,EAbG,WAChB,OACE,cAAC,IAAD,CAAK7D,SAAS,KAAd,SACE,eAAC,IAAD,CAAQ8D,QAAS,EAAjB,UACE,cAAC,IAAD,CAASvF,GAAG,KAAKC,KAAK,KAAtB,wBAGA,cAAC,EAAD,UCTOuF,EANS,WACtB,OACE,+CCIWC,EANM,WACnB,OACE,4C,OCkDWC,EAlDO,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,SAAe,EACzB5B,mBAAS2B,GAAiB,IADD,mBAC9CE,EAD8C,KACtCC,EADsC,OAEzB9B,mBAAS,IAFgB,mBAE9C+B,EAF8C,KAEtCC,EAFsC,OAGvBhC,mBAAS,IAHc,mBAG9CiC,EAH8C,KAGrCC,EAHqC,OAIblC,oBAAS,GAJI,mBAIhCmC,GAJgC,aAKzBnC,oBAAS,GALgB,mBAKtCoC,GALsC,WAO/CC,EAAeC,kBAAO,GAE5BlC,qBAAU,WACJiC,EAAaE,UACfT,EAAUH,GACVK,EAAU,IACVE,EAAW,IACXC,GAAgB,GAChBC,GAAU,IAEZC,EAAaE,SAAU,IACtB,CAACZ,IAsBJ,MAAO,CACLE,SACAE,SACAE,UACAO,aAxBmB,SAACC,GACpBA,EAAMC,UADwB,IAEtB9D,EAAW6D,EAAX7D,OACA+D,EAAgB/D,EAAhB+D,KAAMC,EAAUhE,EAAVgE,MACdd,EAAU,2BAAKD,GAAN,kBAAec,EAAOC,MAqB/BC,WAlBiB,SAACJ,GAAW,IAErBE,EADWF,EAAX7D,OACA+D,KACRT,EAAW,2BAAKD,GAAN,kBAAgBU,GAAO,KACjCX,EAAU,eAAKD,KAefe,aAZmB,SAACL,GAChBA,GAAOA,EAAMM,iBACjBf,EAAU,eAAKD,IACfH,EAAS,CAAEC,SAAQE,cCrCjBJ,EAAgB,CACpBT,SAAU,GACVE,MAAO,GACP4B,KAAM,GACNC,QAAS,IAiEIC,EA9DQ,WAAO,IAAD,EAQvBxB,EAAc,CAChBC,gBACAC,SAAU,SAACC,GAAD,OAAYhC,QAAQC,IAAI+B,MARlCA,EAFyB,EAEzBA,OAGAW,GALyB,EAGzBT,OAHyB,EAIzBE,QAJyB,EAKzBO,cAEAM,GAPyB,EAMzBD,WANyB,EAOzBC,cAMF,OACE,uBAAMlB,SAAUkB,EAAhB,UACE,kCACE,0CACA,uBACEH,KAAK,WACLQ,KAAK,OACLP,MAAOf,EAAOX,SACdkC,SAAUZ,EACVa,UAAQ,KAERxB,EAAOX,UAAY,+DAEvB,kCACE,8CACA,uBACEyB,KAAK,QACLQ,KAAK,QACLP,MAAOf,EAAOT,MACdgC,SAAUZ,EACVa,UAAQ,KAERxB,EAAOT,OAAS,oEAEpB,kCACE,qCACA,uBACEuB,KAAK,OACLQ,KAAK,OACLP,MAAOf,EAAOmB,KACdI,SAAUZ,OAGd,kCACE,wCACA,uBACEG,KAAK,UACLQ,KAAK,UACLP,MAAOf,EAAOoB,QACdG,SAAUZ,OAGd,8BACE,wBAAQW,KAAK,SAAb,mC,oDCzCFxB,GAAgB,CACpBP,MAAO,IA+HMkC,GA3HG,SAAC,GAIZ,IAHLC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aACI,EA6BA/B,EAAc,CAChBC,iBACAC,SA9BgB,SAAC8B,GACjB,IACE,GAAIH,EAAW,CACb,GAAIG,EAAU7B,OAAOT,QAAUmC,EAE7B,MADA1D,QAAQC,IAAI4D,GACN,IAAIC,MAAM,yBAGhBF,SAGFD,EAAaE,EAAU7B,OAAOT,OAC9BqC,IAGJ,MAAOG,GACL/D,QAAQC,IAAI8D,GACZ/D,QAAQC,IAAIiC,OAKdF,EAvBE,EAuBFA,OACAE,EAxBE,EAwBFA,OAEAS,GA1BE,EAyBFP,QAzBE,EA0BFO,cAEAM,GA5BE,EA2BFD,WA3BE,EA4BFC,cAQF,OACE,cAAC,IAAD,CACEzE,EAAE,OACFwF,WAAW,SACXC,eAAe,SACfC,OAAO,QACPC,GAAI,EACJ/F,GAAG,UANL,SAQE,eAAC,IAAD,CACEgG,UAAU,SACVJ,WAAW,UACXxF,EAAE,OACF6F,SAAS,QACTxD,aAAa,KACbD,YAAY,MACZxC,GAAG,QACH9B,EAAG,EACHgI,GAAG,OATL,UAWE,eAAC,IAAD,CACEC,UAAU,SACVD,GAAG,OACHE,GAAG,OAHL,UAKE,cAAC,IAAD,CACErI,GAAG,KACHqI,GAAG,SAFL,uBAMA,cAAC,IAAD,CAAM5G,SAAS,KAAf,wDAKF,sBAAMmE,SAAUkB,EAAhB,SACE,eAAC,IAAD,CAAOvB,QAAS,EAAGsC,WAAW,UAA9B,UACE,eAAC,IAAD,CAAaxE,GAAG,QAAQiF,YAAU,EAAlC,UACE,cAAC,IAAD,4BACA,cAAC,IAAD,CACEjB,UAAQ,EACRV,KAAK,QACLQ,KAAK,QACLoB,YAAY,2BACZ3B,MAAOf,EAAOT,MACdgC,SAAUZ,OAId,cAAC,IAAD,CAAQgC,YAAY,OAAOrB,KAAK,SAAhC,qBAEA,cAAC,IAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAM1F,SAAS,KAAK2G,UAAU,SAA9B,kCAEF,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC,IAAD,IACA,cAAC,IAAD,CACEJ,GAAI,EACJS,GAAI,EACJvI,WAAW,OACXuB,SAAS,KACTiH,aAAa,MACbC,YAAY,WANd,kCAUA,cAAC,IAAD,CAAaxI,EAAG,EAAhB,SACGoH,GAAwB,gDC/H5BqB,GAZI,SAAClI,GAClB,OACE,cAAC,IAAD,CACEuH,UAAU,SACV5F,EAAE,OACFwG,KAAK,QAHP,SAKGnI,EAAMH,YCIEuI,GAXO,SAACpI,GACrB,OACE,cAAC,IAAD,CACEV,GAAG,OACH+I,KAAK,IAFP,SAIGrI,EAAMH,YC0BEyI,GAhCC,WACd,IAAMC,EAAqB,SAACC,EAAMC,GAChC,IAAMC,EAAaD,EAAcE,QAAQH,GACnCI,EAAY5F,KAAK6F,MAAMH,GAG7B,OAFAvF,QAAQC,IAAIwF,GAELA,GANW,EASctF,mBAASiF,EAAmB,YAAaO,eATvD,mBASbjC,EATa,KASFC,EATE,OAUcxD,mBAASiF,EAAmB,YAAaQ,iBAVvD,mBAUbC,EAVa,KAUFjC,EAVE,KAsBpB,MAAO,CACLF,YACAC,aAZoB,SAACmC,GACrBH,aAAaI,QAAQ,YAAalG,KAAKC,UAAUgG,IACjDnC,EAAamC,IAWbD,YACAjC,aAToB,WACpBgC,eAAeG,QAAQ,YAAalG,KAAKC,WAAU,IACnD8D,GAAa,MCmCFoC,OAzCf,WAAgB,IAAD,EAMTb,KAJFzB,EAFW,EAEXA,UACAC,EAHW,EAGXA,aACAkC,EAJW,EAIXA,UACAjC,EALW,EAKXA,aAKF,OAFA5D,QAAQC,IAAI4F,GAEPA,GAAcnC,EASjB,cAAC,IAAD,CAAgBuC,MAAOA,QAAvB,SACE,cAAC,IAAD,UACE,eAAC,GAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,GAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACnJ,KAAK,IAAIoJ,OAAQ,kBAC5B,cAAC,IAAD,CAAU3J,GAAG,cAEf,cAAC,IAAD,CAAO0J,OAAK,EAACnJ,KAAK,SAASqJ,UAAW3E,IACtC,cAAC,IAAD,CAAOyE,OAAK,EAACnJ,KAAK,gBAAgBqJ,UAAW/C,IAC7C,cAAC,IAAD,CAAO6C,OAAK,EAACnJ,KAAK,aAAaqJ,UAAWzE,IAC1C,cAAC,IAAD,CAAOuE,OAAK,EAACnJ,KAAK,kBAAkBqJ,UAAWxE,SAGnD,cAAC,EAAD,WAtBJ,cAAC,IAAD,CAAgBqE,MAAOA,QAAvB,SACE,cAAC,GAAD,CAAWvC,UAAWA,EAAWC,aAAcA,EAAcC,aAAcA,OCvBnFyC,IAASF,OACP,eAAC,aAAD,WACE,cAAC,IAAD,IACA,cAAC,GAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.1a83fce0.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Box,\n  Link,\n  Heading\n} from '@chakra-ui/react';\n\nconst Logo = () => {\n  return (\n    <Box>\n      <Heading\n        as=\"h6\"\n        size=\"md\"\n        fontWeight=\"bold\"\n        p=\"0\"\n      >\n        <Link as={RouterLink} to=\"/users\">\n          Users App\n      </Link>\n      </Heading>\n    </Box>\n  );\n};\n\nexport default Logo;","import { Link as RouterLink } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport {\n  Box,\n  List,\n  ListItem,\n  Link,\n  Flex\n} from '@chakra-ui/react';\n\nconst MenuItem = ({ children, to, ...rest }) => {\n  return (\n    <ListItem p={3} {...rest}>\n      <Link as={RouterLink} to={to}>{children}</Link>\n    </ListItem>\n  )\n}\n\nconst SiteNav = (props) => {\n  const isActive = path => {\n    return props.location.pathname === path ? 'nav-item--active' : null;\n  };\n\n  return (\n    <Box\n      as=\"nav\"\n    >\n      <List\n        d=\"flex\"\n      >\n        <MenuItem to=\"/users\" className={isActive('/users')}>Users</MenuItem>\n        <MenuItem to=\"/users/create\" className={isActive('/users/create')}>Create User</MenuItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default withRouter(SiteNav);","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import Logo from '../logo/logo.component';\nimport SiteNav from '../site-nav/site-nav.component';\nimport { ColorModeSwitcher } from '../color-mode/ColorModeSwitcher';\n\nimport { Box, Flex, useColorMode } from '@chakra-ui/react';\n\nconst Header = () => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      as=\"header\"\n      bg={colorMode === \"light\" ? \"white\" : \"gray.900\"}\n      color={colorMode === \"light\" ? \"black\" : \"white\"}\n      boxShadow=\"rgba(0, 0, 0, 0.1) 0px 1px 2px 0px\"\n    >\n      <Flex\n        justify=\"space-between\"\n        align=\"center\"\n        w=\"100%\"\n        maxW=\"1200px\"\n        h=\"100%\"\n        mx=\"auto\"\n        p=\"1.5em 1em\"\n      >\n        <Logo />\n        <Flex\n          align=\"center\"\n          justifySelf=\"flex-end\">\n          <SiteNav />\n          <ColorModeSwitcher p={3} />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Header;","import { Flex, Box, Link } from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <Box\n      as=\"footer\"\n      bg=\"gray.700\"\n      color=\"white\"\n    >\n      <Flex\n        w=\"100%\"\n        maxW=\"1200px\"\n        p=\"1.5rem 1rem\"\n        mx=\"auto\"\n        h=\"100%\"\n      >\n        <Box>\n          &copy; <Link color=\"teal.200\" href=\"https://github.com/shljshlj\" target=\"_blank\" rel=\"noopener noreferrer\">shljshlj</Link> 2021\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;","const endpoint = 'https://my-json-server.typicode.com/shljshlj/demo/users'\n\nclass UserService {\n  async getUsers() {\n    const res = await fetch(endpoint);\n    const users = await res.json();\n    return users;\n  }\n\n  async getUserDetails(id) {\n    const res = await fetch(endpoint + '/' + id);\n    const user = await res.json();\n    return user;\n  }\n\n  async createUser(userData) {\n    const res = await fetch(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n    console.log(res);\n  }\n\n  async editUser(id) {\n\n  }\n\n  async deleteUser(id) {\n    const res = await fetch(endpoint + '/' + id, {\n      method: 'DELETE'\n    });\n    console.log(res);\n  }\n}\n\nexport const userService = new UserService();","import { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport { userService } from '../../services/userService';\n\nimport {\n  Box,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Link,\n  Image,\n  Text\n} from \"@chakra-ui/react\"\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      setLoading(true);\n      const users = await userService.getUsers();\n      console.log(users);\n      setUsers(users);\n      setLoading(false);\n    }\n\n    getUsers();\n  }, []);\n\n  if (loading) {\n    return (\n      <div>Loading...</div>\n    );\n  }\n\n  return (\n    <Box>\n      <Table variant=\"simple\" size=\"md\">\n        <Thead>\n          <Tr>\n            <Th isNumeric>Id</Th>\n            <Th>Picture</Th>\n            <Th>Full Name</Th>\n            <Th>State</Th>\n            <Th>Email Address</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {\n            users.length !== 0 ?\n              users.map(user => {\n                return (\n                  <Tr key={user.id}>\n                    <Td isNumeric>{user.id}</Td>\n                    <Td>\n                      <Link as={RouterLink} to={`/users/${user.id}`}>\n                        <Box maxW=\"100px\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n                          <Image\n                            boxSize=\"100%\"\n                            objectFit=\"cover\"\n                            src={user.avatar || \"https://via.placeholder.com/100\"}\n                            fallbackSrc=\"https://via.placeholder.com/100\"\n                            alt={`Profile picture of ${user.fullName}`}\n                          />\n                        </Box>\n                      </Link>\n                    </Td>\n                    <Td>\n                      <Link as={RouterLink} to={`/users/${user.id}`}>\n                        {user.fullName}\n                      </Link>\n                    </Td>\n                    <Td>{user.state}</Td>\n                    <Td color=\"gray.500\">{user.email}</Td>\n                  </Tr>\n                )\n              }) :\n              (\n                <Tr>\n                  <Td colSpan=\"5\">\n                    <Text fontSize=\"sm\" color=\"gray.600\" align=\"center\">No user data</Text>\n                  </Td>\n                </Tr>\n              )\n          }\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n\nexport default UserList;","import UserList from '../../components/user-list/user-list.component';\n\nimport {\n  Box,\n  VStack,\n  Heading\n} from '@chakra-ui/react';\n\nconst UsersPage = () => {\n  return (\n    <Box fontSize=\"md\">\n      <VStack spacing={8}>\n        <Heading as=\"h1\" size=\"xl\">\n          Users Page\n        </Heading>\n        <UserList />\n      </VStack>\n    </Box>\n  );\n}\n\nexport default UsersPage;","const UserDetailsPage = () => {\n  return (\n    <h1>User Details</h1>\n  );\n}\n\nexport default UserDetailsPage;","const UserEditPage = () => {\n  return (\n    <h1>Edit User</h1>\n  );\n}\n\nexport default UserEditPage;","import { useState, useEffect, useRef } from 'react';\n\nconst useCustomForm = ({ initialValues, onSubmit }) => {\n  const [values, setValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [onSubmitting, setOnSubmitting] = useState(false);\n  const [onBlur, setOnBlur] = useState(false);\n\n  const formRendered = useRef(true);\n\n  useEffect(() => {\n    if (formRendered.current) {\n      setValues(initialValues);\n      setErrors({});\n      setTouched({});\n      setOnSubmitting(false);\n      setOnBlur(false);\n    }\n    formRendered.current = false;\n  }, [initialValues]);\n\n  const handleChange = (event) => {\n    event.persist();\n    const { target } = event;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleBlur = (event) => {\n    const { target } = event;\n    const { name } = target;\n    setTouched({ ...touched, [name]: true });\n    setErrors({ ...errors });\n  };\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors({ ...errors });\n    onSubmit({ values, errors });\n  }\n\n  return {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  };\n}\n\nexport default useCustomForm;","import useCustomForm from '../../hooks/useCustomForm';\n\nconst initialValues = {\n  fullName: '',\n  email: '',\n  city: '',\n  country: ''\n};\n\nconst UserCreatePage = () => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: (values) => console.log(values)\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <p>Full Name</p>\n        <input\n          name=\"fullName\"\n          type=\"text\"\n          value={values.fullName}\n          onChange={handleChange}\n          required\n        />\n        {!values.fullName && <span>Please enter a full name</span>}\n      </label>\n      <label>\n        <p>Email address</p>\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          required\n        />\n        {!values.email && <span>Please enter an email address</span>}\n      </label>\n      <label>\n        <p>City</p>\n        <input\n          name=\"city\"\n          type=\"city\"\n          value={values.city}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <p>Country</p>\n        <input\n          name=\"country\"\n          type=\"country\"\n          value={values.country}\n          onChange={handleChange}\n        />\n      </label>\n      <div>\n        <button type=\"submit\">Create New User</button>\n      </div>\n    </form>\n  );\n}\n\nexport default UserCreatePage;","import useCustomForm from '../../hooks/useCustomForm';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n  Box,\n  Flex,\n  Stack,\n  Heading,\n  Text,\n  Divider,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/react';\n\nconst initialValues = {\n  email: ''\n};\n\n\nconst LoginPage = ({\n  authToken,\n  setAuthToken,\n  setHasLogged\n}) => {\n  const loginUser = (loginData) => {\n    try {\n      if (authToken) {\n        if (loginData.values.email !== authToken) {\n          console.log(loginData)\n          throw new Error(\"Email is not matching\");\n        }\n        else {\n          setHasLogged();\n        }\n      } else {\n        setAuthToken(loginData.values.email);\n        setHasLogged();\n      }\n    }\n    catch (err) {\n      console.log(err);\n      console.log(errors);\n    }\n  }\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: loginUser\n  });\n\n\n\n  return (\n    <Flex\n      w=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100vh\"\n      px={8}\n      bg=\"#fffaf6\"\n    >\n      <Flex\n        direction=\"column\"\n        alignItems=\"stretch\"\n        w=\"100%\"\n        maxWidth=\"500px\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n        bg=\"white\"\n        p={8}\n        mt=\"-20%\"\n      >\n        <Box\n          textAlign=\"center\"\n          mt=\"1rem\"\n          mb=\"3rem\"\n        >\n          <Heading\n            as=\"h1\"\n            mb=\"0.5rem\"\n          >\n            Users App\n        </Heading>\n          <Text fontSize=\"md\">\n            Sign in with email to manage users data\n        </Text>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Stack spacing={6} alignItems=\"stretch\">\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                required\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email address\"\n                value={values.email}\n                onChange={handleChange}\n              />\n            </FormControl>\n\n            <Button colorScheme=\"teal\" type=\"submit\">Sign In</Button>\n\n            <Divider />\n\n            <Popover>\n              <PopoverTrigger>\n                <Link fontSize=\"sm\" textAlign=\"center\">Forgot your email?</Link>\n              </PopoverTrigger>\n              <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader\n                  px={4}\n                  pt={4}\n                  fontWeight=\"bold\"\n                  fontSize=\"sm\"\n                  borderBottom=\"1px\"\n                  borderColor=\"teal.100\"\n                >\n                  Email used to login:\n                </PopoverHeader>\n                <PopoverBody p={4}>\n                  {authToken ? authToken : 'You haven\\'t sign in before'}\n                </PopoverBody>\n              </PopoverContent>\n            </Popover>\n          </Stack>\n        </form>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default LoginPage;","import { Flex } from '@chakra-ui/react';\n\nconst BaseLayout = (props) => {\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"100%\"\n      minH=\"100vh\"\n    >\n      {props.children}\n    </Flex>\n  )\n};\n\nexport default BaseLayout;","import { Box } from \"@chakra-ui/layout\"\n\nconst PageContainer = (props) => {\n  return (\n    <Box\n      as=\"main\"\n      flex=\"1\"\n    >\n      {props.children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import { useState } from 'react';\n\nconst useAuth = () => {\n  const getItemFromStorage = (item, typeOfStorage) => {\n    const itemString = typeOfStorage.getItem(item);\n    const itemValue = JSON.parse(itemString);\n    console.log(itemValue);\n\n    return itemValue;\n  };\n\n  const [authToken, setAuthToken] = useState(getItemFromStorage('authToken', localStorage));\n  const [hasLogged, setHasLogged] = useState(getItemFromStorage('hasLogged', sessionStorage));\n\n  const saveAuthToken = (userAuthToken) => {\n    localStorage.setItem('authToken', JSON.stringify(userAuthToken));\n    setAuthToken(userAuthToken);\n  };\n\n  const saveHasLogged = () => {\n    sessionStorage.setItem('hasLogged', JSON.stringify(true));\n    setHasLogged(true);\n  };\n\n  return {\n    authToken,\n    setAuthToken: saveAuthToken,\n    hasLogged,\n    setHasLogged: saveHasLogged\n  }\n\n}\n\n\nexport default useAuth;","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { ChakraProvider, theme, } from '@chakra-ui/react';\n\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.component'\nimport UsersPage from './pages/users/users.component';\nimport UserDetailsPage from './pages/user-details/user-details.component';\nimport UserEditPage from './pages/user-edit/user-edit.component';\nimport UserCreatePage from './pages/user-create/user-create.component';\nimport LoginPage from './pages/login/login.component';\nimport BaseLayout from './components/layouts/base-layout.component';\nimport PageContainer from './components/layouts/page-container.component';\n\nimport useAuth from './hooks/useAuth';\n\nfunction App() {\n  const {\n    authToken,\n    setAuthToken,\n    hasLogged,\n    setHasLogged\n  } = useAuth();\n\n  console.log(hasLogged)\n\n  if (!hasLogged || !authToken) {\n    return (\n      <ChakraProvider theme={theme}>\n        <LoginPage authToken={authToken} setAuthToken={setAuthToken} setHasLogged={setHasLogged} />\n      </ChakraProvider>\n    );\n  }\n\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter>\n        <BaseLayout>\n          <Header />\n          <Switch>\n            <PageContainer>\n              <Route exact path='/' render={() =>\n                <Redirect to='/users' />}\n              />\n              <Route exact path='/users' component={UsersPage} />\n              <Route exact path='/users/create' component={UserCreatePage} />\n              <Route exact path='/users/:id' component={UserDetailsPage} />\n              <Route exact path='/users/:id/edit' component={UserEditPage} />\n            </PageContainer>\n          </Switch>\n          <Footer />\n        </BaseLayout>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}