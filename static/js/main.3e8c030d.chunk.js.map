{"version":3,"sources":["components/logo/logo.component.jsx","components/site-nav/site-nav.component.jsx","components/color-mode/ColorModeSwitcher.js","components/header/header.component.jsx","components/footer/footer.component.jsx","components/layouts/page-content.component.jsx","components/layouts/content-section.component.jsx","components/page-heading/page-heading.component.jsx","services/userService.js","components/loading-spinner/loading-spinner.component.jsx","components/user-list/user-item.component.jsx","components/user-list/user-list.component.jsx","pages/users/users.component.jsx","pages/user-details/user-details.component.jsx","pages/user-edit/user-edit.component.jsx","hooks/useCustomForm.js","pages/user-create/user-create.component.jsx","pages/login/login.component.jsx","components/layouts/page-layout.component.jsx","components/layouts/page-container.component.jsx","hooks/useAuth.js","App.js","index.js"],"names":["Logo","as","size","fontWeight","p","RouterLink","to","MenuItem","children","rest","withRouter","props","isActive","path","location","pathname","d","className","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","fontSize","aria-label","variant","color","onClick","icon","Header","colorMode","bg","boxShadow","zIndex","justify","align","justifySelf","Footer","mt","w","maxW","mx","h","href","target","rel","PageContent","px","py","spacing","ContentSection","PageHeading","mb","pl","letterSpacing","alignSelf","endpoint","userService","a","fetch","res","json","users","id","user","userData","method","body","JSON","stringify","headers","console","log","LoadingSpinner","thickness","speed","emptyColor","UserItem","isNumeric","borderWidth","borderRadius","overflow","loading","boxSize","objectFit","src","avatar","fallbackSrc","alt","fullName","city","email","UserList","useState","setUsers","setLoading","useEffect","getUsers","my","colSpan","length","map","UsersPage","UserHeading","textAlign","JobTitle","jobTitle","ProfileImage","ContentDivider","dividerText","borderBottom","borderColor","textTransform","ContactInfo","phone","website","Phone","Email","ExternalLink","AddressInfo","street","state","zip","UserDetails","templateColumns","rowGap","columnGap","justifyItems","direction","alignItems","colStart","UserOptions","justifyContent","borderTop","leftIcon","Edit","height","width","colorScheme","Delete","UserDetailsPage","useParams","setUser","getUserDetails","getUser","UserEditPage","useCustomForm","initialValues","onSubmit","values","setValues","errors","setErrors","touched","setTouched","setOnSubmitting","setOnBlur","formRendered","useRef","current","handleChange","event","persist","name","value","handleBlur","handleSubmit","preventDefault","country","UserCreatePage","type","onChange","required","LoginPage","authToken","setAuthToken","setHasLogged","loginData","Error","err","sm","base","maxWidth","isRequired","placeholder","pt","PageLayout","minH","PageContainer","flex","useAuth","getItemFromStorage","item","typeOfStorage","itemString","getItem","itemValue","parse","localStorage","sessionStorage","hasLogged","userAuthToken","setItem","App","process","theme","basename","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3e8c030d.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Box,\n  Link,\n  Heading\n} from '@chakra-ui/react';\n\nconst Logo = () => {\n  return (\n    <Box>\n      <Heading\n        as=\"h6\"\n        size=\"md\"\n        fontWeight=\"bold\"\n        p=\"0\"\n      >\n        <Link as={RouterLink} to=\"/users\">\n          Users App\n      </Link>\n      </Heading>\n    </Box>\n  );\n};\n\nexport default Logo;","import { Link as RouterLink } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport {\n  Box,\n  List,\n  ListItem,\n  Link,\n  Flex\n} from '@chakra-ui/react';\n\nconst MenuItem = ({ children, to, ...rest }) => {\n  return (\n    <ListItem p={3} {...rest}>\n      <Link as={RouterLink} to={to}>{children}</Link>\n    </ListItem>\n  )\n}\n\nconst SiteNav = (props) => {\n  const isActive = path => {\n    return props.location.pathname === path ? 'nav-item--active' : null;\n  };\n\n  return (\n    <Box\n      as=\"nav\"\n    >\n      <List\n        d=\"flex\"\n      >\n        <MenuItem to=\"/users\" className={isActive('/users')}>Users</MenuItem>\n        <MenuItem to=\"/users/create\" className={isActive('/users/create')}>Create User</MenuItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default withRouter(SiteNav);","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import Logo from '../logo/logo.component';\nimport SiteNav from '../site-nav/site-nav.component';\nimport { ColorModeSwitcher } from '../color-mode/ColorModeSwitcher';\n\nimport { Box, Flex, useColorMode } from '@chakra-ui/react';\n\nconst Header = () => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      as=\"header\"\n      bg={colorMode === \"light\" ? \"white\" : \"gray.900\"}\n      boxShadow=\"rgba(0, 0, 0, 0.1) 0px 1px 2px 0px\"\n      zIndex=\"2\"\n    >\n      <Flex\n        justify=\"space-between\"\n        align=\"center\"\n        p=\"1em\"\n      >\n        <Logo />\n        <Flex\n          align=\"center\"\n          justifySelf=\"flex-end\"\n        >\n          <SiteNav />\n          <ColorModeSwitcher p={3} />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Header;","import { Flex, Box, Link } from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <Box\n      as=\"footer\"\n      bg=\"gray.800\"\n      color=\"white\"\n      mt=\"3rem\"\n    >\n      <Flex\n        w=\"100%\"\n        maxW=\"1200px\"\n        p=\"2rem 1rem\"\n        mx=\"auto\"\n        h=\"100%\"\n      >\n        <Box>\n          &copy; <Link color=\"teal.200\" href=\"https://github.com/shljshlj\" target=\"_blank\" rel=\"noopener noreferrer\">shljshlj</Link> 2021\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;","import { VStack } from '@chakra-ui/react';\n\nconst PageContent = ({ children }) => {\n  return (\n    <VStack\n      w=\"100%\"\n      maxW=\"900px\"\n      h=\"100%\"\n      px=\"1rem\"\n      py=\"2rem\"\n      mx=\"auto\"\n      spacing={10}\n    >\n      {children}\n    </VStack>\n  );\n};\n\nexport default PageContent;","import { Box } from \"@chakra-ui/react\"\n\nconst ContentSection = ({ children }) => {\n  return (\n    <Box\n    // px={4}\n    // my=\"2rem\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default ContentSection;","import { Heading } from \"@chakra-ui/react\";\n\nconst PageHeading = ({ children, ...rest }) => {\n  return (\n    <Heading\n      as=\"h1\"\n      size=\"xl\"\n      fontWeight=\"bold\"\n      mt=\"1em\"\n      mb=\"0.2em\"\n      pl=\"24px\"\n      letterSpacing=\"0.1em\"\n      alignSelf=\"flex-start\"\n      {...rest}\n    >\n      {children}\n    </Heading>\n  );\n};\n\nexport default PageHeading;","const endpoint = 'https://my-json-server.typicode.com/shljshlj/demo/users'\n\nclass UserService {\n  async getUsers() {\n    const res = await fetch(endpoint);\n    const users = await res.json();\n    return users;\n  }\n\n  async getUserDetails(id) {\n    const res = await fetch(endpoint + '/' + id);\n    const user = await res.json();\n    return user;\n  }\n\n  async createUser(userData) {\n    const res = await fetch(endpoint, {\n      method: 'POST',\n      body: JSON.stringify(userData),\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n    console.log(res);\n  }\n\n  async editUser(id) {\n\n  }\n\n  async deleteUser(id) {\n    const res = await fetch(endpoint + '/' + id, {\n      method: 'DELETE'\n    });\n    console.log(res);\n  }\n}\n\nexport const userService = new UserService();","import { Spinner } from \"@chakra-ui/react\";\n\nconst LoadingSpinner = () => {\n  return (\n    <Spinner\n      thickness=\"4px\"\n      speed=\"0.65s\"\n      emptyColor=\"gray.200\"\n      color=\"teal.500\"\n      size=\"lg\"\n    />\n  );\n};\n\nexport default LoadingSpinner;","import { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Square,\n  Tr,\n  Td,\n  Link,\n  Image,\n  useColorMode\n} from \"@chakra-ui/react\"\n\nconst UserItem = ({ user }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Tr>\n      <Td isNumeric>{user.id}</Td>\n      <Td>\n        <Link as={RouterLink} to={`/users/${user.id}`}>\n          <Square size=\"60px\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n            <Image\n              loading=\"lazy\"\n              boxSize=\"100%\"\n              objectFit=\"cover\"\n              src={user.avatar || \"https://via.placeholder.com/100\"}\n              fallbackSrc=\"https://via.placeholder.com/100\"\n              alt={`Profile picture of ${user.fullName}`}\n            />\n          </Square>\n        </Link>\n      </Td>\n      <Td>\n        <Link as={RouterLink} to={`/users/${user.id}`}>\n          {user.fullName}\n        </Link>\n      </Td>\n      <Td>{user.city}</Td>\n      <Td color={colorMode === \"light\" ? \"teal.600\" : \"teal.400\"}>{user.email}</Td>\n    </Tr>\n  );\n};\n\nexport default UserItem;","import { useState, useEffect } from 'react';\n\nimport { userService } from '../../services/userService';\n\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component';\nimport UserItem from './user-item.component';\n\nimport {\n  Box,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Text,\n  Center\n} from \"@chakra-ui/react\"\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      setLoading(true);\n      const users = await userService.getUsers();\n      setUsers(users);\n      setLoading(false);\n    }\n\n    getUsers();\n  }, [setUsers]);\n\n  return (\n    <Box\n      my=\"2rem\"\n    >\n      <Table variant=\"simple\" size=\"md\">\n        <Thead>\n          <Tr>\n            <Th isNumeric>Id</Th>\n            <Th>Picture</Th>\n            <Th>Full Name</Th>\n            <Th>City</Th>\n            <Th>Email Address</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {loading ?\n            (\n              <Tr>\n                <Td colSpan=\"5\">\n                  <Center>\n                    <LoadingSpinner />\n                  </Center>\n                </Td>\n              </Tr>\n            ) :\n            users.length !== 0 ?\n              users.map(user => <UserItem key={user.id} user={user} />) :\n              (\n                <Tr>\n                  <Td colSpan=\"5\">\n                    <Text fontSize=\"sm\" color=\"gray.600\" align=\"center\">There are no users to display</Text>\n                  </Td>\n                </Tr>\n              )\n          }\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n\nexport default UserList;","import PageContent from '../../components/layouts/page-content.component';\nimport ContentSection from '../../components/layouts/content-section.component';\nimport PageHeading from '../../components/page-heading/page-heading.component';\n\nimport UserList from '../../components/user-list/user-list.component';\n\nconst UsersPage = () => {\n  return (\n    <PageContent>\n      <PageHeading>\n        List of Users\n        </PageHeading>\n      <ContentSection>\n        <UserList />\n      </ContentSection>\n    </PageContent>\n  );\n}\n\nexport default UsersPage;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { userService } from '../../services/userService';\n\nimport PageContent from '../../components/layouts/page-content.component';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner.component';\n\nimport { Box, Square, Flex, Heading, Image, Grid, GridItem, Text, HStack, Link, Button, ButtonGroup, Stack } from '@chakra-ui/react';\n\nimport { PhoneIcon, EmailIcon, ExternalLinkIcon, EditIcon, DeleteIcon } from '@chakra-ui/icons'\n\nconst UserHeading = ({ fullName }) => {\n  return (\n    <Heading\n      as=\"h1\"\n      size=\"xl\"\n      letterSpacing=\"0.1em\"\n      mt=\"1em\"\n      textAlign={{ \"base\": \"center\", \"md\": \"start\" }}\n    >\n      {fullName}\n    </Heading>\n  );\n};\n\nconst JobTitle = ({ jobTitle }) => {\n  return (\n    <Text\n      mt=\"0.5em\"\n      color=\"gray\"\n      fontWeight=\"bold\"\n    >\n      {jobTitle}\n    </Text>\n  );\n};\n\nconst ProfileImage = ({ avatar, fullName }) => {\n  return (\n    <Square\n      mx=\"auto\"\n      maxW=\"170px\"\n      size={{ \"sm\": \"170px\" }}\n      borderWidth=\"4px\"\n      borderRadius=\"8px\"\n      overflow=\"hidden\"\n    >\n      <Image\n        loading=\"lazy\"\n        boxSize=\"100%\"\n        objectFit=\"cover\"\n        src={avatar || \"https://via.placeholder.com/150\"}\n        fallbackSrc=\"https://via.placeholder.com/150\"\n        alt={`Profile picture of ${fullName}`}\n      />\n    </Square>\n  );\n};\n\nconst ContentDivider = ({ dividerText }) => {\n  return (\n    <Box\n      borderBottom=\"1px\"\n      borderColor=\"gray.700\"\n      textTransform=\"uppercase\"\n      fontSize=\"lg\"\n      py={2}\n      mx={{ \"base\": \"1em\", \"md\": \"0\" }}\n      mt=\"1em\"\n      textAlign={{ \"base\": \"center\", \"md\": \"unset\" }}\n    >\n      {dividerText}\n    </Box>\n  );\n};\n\nconst ContactInfo = ({ phone, email, website }) => {\n  return (\n    <Box\n      mt=\"1rem\"\n    >\n      <HStack p={2} spacing={4}>\n        <PhoneIcon color=\"gray\" />\n        <Box as=\"span\">{phone}</Box>\n      </HStack>\n      <HStack p={2} spacing={4}>\n        <EmailIcon color=\"gray\" />\n        <Box as=\"span\" color=\"teal.500\">{email}</Box>\n      </HStack>\n      <HStack p={2} spacing={4}>\n        <ExternalLinkIcon color=\"gray\" />\n        <Box as=\"span\"><Link color=\"teal.500\">{website}</Link></Box>\n      </HStack>\n    </Box>\n  );\n};\n\nconst AddressInfo = ({ street, city, state, zip }) => {\n  return (\n    <Box\n      mt=\"1rem\"\n    >\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">Street:</Box>\n        <Box as=\"span\">{street}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">City:</Box>\n        <Box as=\"span\">{city}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">State:</Box>\n        <Box as=\"span\">{state}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">ZIP:</Box>\n        <Box as=\"span\">{zip}</Box>\n      </HStack>\n    </Box>\n  );\n};\n\nconst UserDetails = ({ user }) => {\n  const { avatar, fullName, phone, email, website, street, city, state, zip, jobTitle } = user;\n\n  return (\n    <Grid\n      templateColumns={{ \"base\": \"1fr\", \"md\": \"1fr 2fr\" }}\n      rowGap={4}\n      columnGap={8}\n      my=\"2rem\"\n      justifyItems={{ \"base\": \"center\", \"md\": \"unset\" }}\n    >\n      <GridItem>\n        <ProfileImage avatar={avatar} fullName={fullName} />\n      </GridItem>\n      <GridItem>\n        <Flex\n          direction=\"column\"\n          alignItems={{ \"base\": \"center\", \"md\": \"flex-start\" }}\n        >\n          <UserHeading fullName={fullName} />\n          <JobTitle jobTitle={jobTitle} />\n        </Flex>\n      </GridItem>\n      <GridItem\n        colStart={{ \"md\": 2 }}\n        justifySelf=\"stretch\"\n      >\n        <ContentDivider dividerText={'Contact Details'} />\n      </GridItem>\n      <GridItem>\n        <ContactInfo phone={phone} email={email} website={website} />\n      </GridItem>\n      <GridItem>\n        <AddressInfo street={street} city={city} state={state} zip={zip} />\n      </GridItem>\n    </Grid>\n  );\n};\n\nconst UserOptions = () => {\n  return (\n    <Flex\n      mt=\"4rem\"\n      justifyContent={{ \"base\": \"center\", \"md\": \"flex-end\" }}\n      borderTop=\"1px\"\n      borderColor=\"gray.700\"\n    >\n      <ButtonGroup\n        mt=\"2rem\"\n        mb={{ \"base\": \"2rem\", \"md\": \"1rem\" }}\n        size=\"sm\"\n      >\n        <Stack\n          direction={{ \"base\": \"column\", \"md\": \"row\" }}\n          py={2}\n          spacing={3}\n        >\n          <Button\n            leftIcon={<EditIcon />}\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"blue\"\n            variant=\"outline\"\n          >\n            Edit User\n      </Button>\n          <Button\n            leftIcon={<DeleteIcon />}\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"red\"\n            variant=\"outline\"\n          >\n            Delete User\n      </Button>\n          <Button\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"teal\"\n          >\n            Create New User\n      </Button>\n        </Stack>\n      </ButtonGroup>\n    </Flex >\n  );\n};\n\nconst UserDetailsPage = () => {\n  const { id } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getUser = async () => {\n      setLoading(true);\n      const user = await userService.getUserDetails(id);\n      console.log(user);\n      setUser(user);\n      setLoading(false);\n    }\n\n    getUser();\n  }, [id]);\n\n  return (\n    <PageContent>\n      {loading ?\n        <LoadingSpinner /> :\n        user ?\n          (\n            <Box\n              as=\"article\"\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              p={{ \"base\": 4, \"md\": \"3rem 4rem\" }}\n              width=\"100%\"\n              boxShadow=\"0 1px 2px rgba(0, 0, 0, 0.2)\"\n            >\n              <UserDetails user={user} />\n              <Box\n                as=\"footer\"\n              >\n                <UserOptions />\n              </Box>\n            </Box>\n          ) :\n          <Text as=\"h3\" textAlign=\"center\">There is no user data</Text>\n      }\n    </PageContent>\n  );\n}\n\nexport default UserDetailsPage;","const UserEditPage = () => {\n  return (\n    <h1>Edit User</h1>\n  );\n}\n\nexport default UserEditPage;","import { useState, useEffect, useRef } from 'react';\n\nconst useCustomForm = ({ initialValues, onSubmit }) => {\n  const [values, setValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n  const [touched, setTouched] = useState({});\n  const [onSubmitting, setOnSubmitting] = useState(false);\n  const [onBlur, setOnBlur] = useState(false);\n\n  const formRendered = useRef(true);\n\n  useEffect(() => {\n    if (formRendered.current) {\n      setValues(initialValues);\n      setErrors({});\n      setTouched({});\n      setOnSubmitting(false);\n      setOnBlur(false);\n    }\n    formRendered.current = false;\n  }, [initialValues]);\n\n  const handleChange = (event) => {\n    event.persist();\n    const { target } = event;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleBlur = (event) => {\n    const { target } = event;\n    const { name } = target;\n    setTouched({ ...touched, [name]: true });\n    setErrors({ ...errors });\n  };\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors({ ...errors });\n    onSubmit({ values, errors });\n  }\n\n  return {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  };\n}\n\nexport default useCustomForm;","import useCustomForm from '../../hooks/useCustomForm';\n\nconst initialValues = {\n  fullName: '',\n  email: '',\n  city: '',\n  country: ''\n};\n\nconst UserCreatePage = () => {\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: (values) => console.log(values)\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        <p>Full Name</p>\n        <input\n          name=\"fullName\"\n          type=\"text\"\n          value={values.fullName}\n          onChange={handleChange}\n          required\n        />\n        {!values.fullName && <span>Please enter a full name</span>}\n      </label>\n      <label>\n        <p>Email address</p>\n        <input\n          name=\"email\"\n          type=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          required\n        />\n        {!values.email && <span>Please enter an email address</span>}\n      </label>\n      <label>\n        <p>City</p>\n        <input\n          name=\"city\"\n          type=\"city\"\n          value={values.city}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <p>Country</p>\n        <input\n          name=\"country\"\n          type=\"country\"\n          value={values.country}\n          onChange={handleChange}\n        />\n      </label>\n      <div>\n        <button type=\"submit\">Create New User</button>\n      </div>\n    </form>\n  );\n}\n\nexport default UserCreatePage;","import useCustomForm from '../../hooks/useCustomForm';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n  Box,\n  Flex,\n  Stack,\n  Heading,\n  Text,\n  Divider,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n  useColorMode\n} from '@chakra-ui/react';\n\nconst initialValues = {\n  email: ''\n};\n\n\nconst LoginPage = ({\n  authToken,\n  setAuthToken,\n  setHasLogged\n}) => {\n  const { colorMode } = useColorMode();\n  const loginUser = (loginData) => {\n    try {\n      if (authToken) {\n        if (loginData.values.email !== authToken) {\n          console.log(loginData)\n          throw new Error(\"Email is not matching\");\n        }\n        else {\n          setHasLogged();\n        }\n      } else {\n        setAuthToken(loginData.values.email);\n        setHasLogged();\n      }\n    }\n    catch (err) {\n      console.log(err);\n      console.log(errors);\n    }\n  }\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: loginUser\n  });\n\n\n\n  return (\n    <Flex\n      w=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100vh\"\n      px={{ sm: 8 }}\n      bg={colorMode === \"light\" ? \"#fffaf6\" : \"gray.500\"}\n    >\n      <Flex\n        direction=\"column\"\n        alignItems=\"stretch\"\n        justifyContent={{ base: \"center\", sm: \"flex-start\" }}\n        height={{ base: \"100%\", sm: \"unset\" }}\n        width=\"100%\"\n        maxWidth=\"500px\"\n        borderRadius={{ sm: \"lg\" }}\n        borderWidth={{ sm: \"1px\" }}\n        bg={colorMode === \"light\" ? \"white\" : \"gray.700\"}\n        p={8}\n        mt={{ sm: \"-20%\" }}\n      >\n        <Box\n          textAlign=\"center\"\n          mt=\"1rem\"\n          mb=\"3rem\"\n        >\n          <Heading\n            as=\"h1\"\n            mb=\"0.5rem\"\n          >\n            Users App\n        </Heading>\n          <Text fontSize=\"md\">\n            Sign in with email to manage users data\n        </Text>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Stack spacing={6} alignItems=\"stretch\">\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                required\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email address\"\n                value={values.email}\n                onChange={handleChange}\n              />\n            </FormControl>\n\n            <Button colorScheme=\"teal\" type=\"submit\">Sign In</Button>\n\n            <Divider />\n\n            <Popover>\n              <PopoverTrigger>\n                <Link fontSize=\"sm\" textAlign=\"center\">Forgot your email?</Link>\n              </PopoverTrigger>\n              <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader\n                  px={4}\n                  pt={4}\n                  fontWeight=\"bold\"\n                  fontSize=\"sm\"\n                  borderBottom=\"1px\"\n                  borderColor=\"teal.100\"\n                >\n                  Email used to login:\n                </PopoverHeader>\n                <PopoverBody p={4}>\n                  {authToken ? authToken : 'You haven\\'t sign in before'}\n                </PopoverBody>\n              </PopoverContent>\n            </Popover>\n          </Stack>\n        </form>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default LoginPage;","import { Flex } from '@chakra-ui/react';\n\nconst PageLayout = (props) => {\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"100%\"\n      minH=\"100vh\"\n    >\n      {props.children}\n    </Flex>\n  )\n};\n\nexport default PageLayout;","import { Box } from \"@chakra-ui/react\"\n\nconst PageContainer = (props) => {\n  return (\n    <Box\n      as=\"main\"\n      flex=\"1\"\n    >\n      {props.children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import { useState } from 'react';\n\nconst useAuth = () => {\n  const getItemFromStorage = (item, typeOfStorage) => {\n    const itemString = typeOfStorage.getItem(item);\n    const itemValue = JSON.parse(itemString);\n    console.log(itemValue);\n\n    return itemValue;\n  };\n\n  const [authToken, setAuthToken] = useState(getItemFromStorage('authToken', localStorage));\n  const [hasLogged, setHasLogged] = useState(getItemFromStorage('hasLogged', sessionStorage));\n\n  const saveAuthToken = (userAuthToken) => {\n    localStorage.setItem('authToken', JSON.stringify(userAuthToken));\n    setAuthToken(userAuthToken);\n  };\n\n  const saveHasLogged = () => {\n    sessionStorage.setItem('hasLogged', JSON.stringify(true));\n    setHasLogged(true);\n  };\n\n  return {\n    authToken,\n    setAuthToken: saveAuthToken,\n    hasLogged,\n    setHasLogged: saveHasLogged\n  }\n\n}\n\n\nexport default useAuth;","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { ChakraProvider, theme, } from '@chakra-ui/react';\n\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.component'\nimport UsersPage from './pages/users/users.component';\nimport UserDetailsPage from './pages/user-details/user-details.component';\nimport UserEditPage from './pages/user-edit/user-edit.component';\nimport UserCreatePage from './pages/user-create/user-create.component';\nimport LoginPage from './pages/login/login.component';\nimport PageLayout from './components/layouts/page-layout.component';\nimport PageContainer from './components/layouts/page-container.component';\n\nimport useAuth from './hooks/useAuth';\n\nfunction App() {\n  const {\n    authToken,\n    setAuthToken,\n    hasLogged,\n    setHasLogged\n  } = useAuth();\n\n  console.log(process.env.PUBLIC_URL)\n\n  if (!hasLogged || !authToken) {\n    return (\n      <ChakraProvider theme={theme}>\n        <LoginPage authToken={authToken} setAuthToken={setAuthToken} setHasLogged={setHasLogged} />\n      </ChakraProvider>\n    );\n  }\n\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter basename='/users-app'>\n        <PageLayout>\n          <Header />\n          <PageContainer>\n            <Switch>\n              <Route exact path='/' render={() =>\n                <Redirect to='/users' />}\n              />\n              <Route exact path='/users' component={UsersPage} />\n              <Route exact path='/users/create' component={UserCreatePage} />\n              <Route exact path='/users/:id' component={UserDetailsPage} />\n              <Route exact path='/users/:id/edit' component={UserEditPage} />\n            </Switch>\n          </PageContainer>\n          <Footer />\n        </PageLayout>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}