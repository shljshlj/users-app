{"version":3,"sources":["components/logo/logo.component.jsx","components/site-nav/site-nav.component.jsx","components/color-mode/ColorModeSwitcher.js","components/header/header.component.jsx","components/footer/footer.component.jsx","components/layouts/page-content.component.jsx","components/layouts/content-section.component.jsx","components/page-heading/page-heading.component.jsx","services/userService.js","components/loading-spinner/loading-spinner.component.jsx","components/user-list/user-item.component.jsx","components/user-list/user-list.component.jsx","pages/users/users.component.jsx","components/modal-msg/modal-msg.component.jsx","pages/user-details/user-details.component.jsx","utils/data.js","components/form/form-field.component.jsx","hooks/useCustomForm.js","pages/user-edit/user-edit.component.jsx","pages/user-create/user-create.component.jsx","pages/login/login.component.jsx","components/layouts/page-layout.component.jsx","components/layouts/page-container.component.jsx","hooks/useAuth.js","App.js","index.js"],"names":["Logo","as","size","fontWeight","p","RouterLink","to","MenuItem","children","rest","withRouter","props","isActive","path","location","pathname","d","className","ColorModeSwitcher","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","fontSize","aria-label","variant","color","onClick","icon","Header","colorMode","bg","boxShadow","zIndex","justify","align","justifySelf","Footer","mt","w","maxW","mx","h","href","target","rel","PageContent","px","py","spacing","ContentSection","width","PageHeading","mb","pl","letterSpacing","alignSelf","BASE_URL","userService","a","fetch","res","json","users","id","endpoint","ok","Error","statusText","status","user","error","message","console","userData","method","headers","body","JSON","stringify","log","LoadingSpinner","thickness","speed","emptyColor","UserItem","borderWidth","borderRadius","data-title","isNumeric","overflow","loading","boxSize","objectFit","src","avatar","fallbackSrc","alt","fullName","city","email","UserList","useState","setUsers","setLoading","useEffect","getUsers","my","colSpan","length","map","UsersPage","ModalMsg","timeoutIdModal","isOpen","onClose","Modal","isCentered","textAlign","UserHeading","JobTitle","jobTitle","ProfileImage","ContentDivider","dividerText","borderBottom","borderColor","textTransform","ContactInfo","phone","website","Phone","Email","ExternalLink","AddressInfo","street","state","zip","UserDetails","templateColumns","rowGap","columnGap","justifyItems","direction","alignItems","colStart","UserOptions","routeChange","deleteUser","justifyContent","borderTop","leftIcon","Edit","height","colorScheme","Delete","UserDetailsPage","useParams","setUser","errorMsg","setErrorMsg","history","useHistory","useDisclosure","onOpen","getUserDetails","response","userError","getUser","push","deleteError","clearTimeout","setTimeout","initialValues","fields","label","name","type","placeholder","isFlex","isFieldRequired","FormField","value","handleChange","generate","optionsControl","display","optionsLabel","flexShrink","optionsInput","isRequired","required","onChange","placement","openDelay","ml","Repeat","useCustomForm","onSubmit","values","setValues","errors","setErrors","formRendered","useRef","current","event","persist","handleSubmit","preventDefault","UserEditForm","userId","updateUser","UserName","UserEditPage","UserCreateForm","createUser","generateFieldData","data","faker","findName","internet","toLowerCase","domainName","phoneNumber","address","streetAddress","cityName","zipCode","generateRandomData","UserCreatePage","LoginPage","authToken","setAuthToken","setHasLogged","loginData","err","touched","handleBlur","sm","base","maxWidth","pt","PageLayout","minH","PageContainer","flex","useAuth","getItemFromStorage","item","typeOfStorage","itemString","getItem","parse","localStorage","sessionStorage","hasLogged","userAuthToken","setItem","App","theme","basename","exact","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e1655549.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Box,\n  Link,\n  Heading\n} from '@chakra-ui/react';\n\nconst Logo = () => {\n  return (\n    <Box>\n      <Heading\n        as=\"h6\"\n        size=\"md\"\n        fontWeight=\"bold\"\n        p=\"0\"\n      >\n        <Link as={RouterLink} to=\"/users\">\n          Users App\n      </Link>\n      </Heading>\n    </Box>\n  );\n};\n\nexport default Logo;","import { Link as RouterLink } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport {\n  Box,\n  List,\n  ListItem,\n  Link,\n  Flex\n} from '@chakra-ui/react';\n\nconst MenuItem = ({ children, to, ...rest }) => {\n  return (\n    <ListItem p={3} {...rest}>\n      <Link as={RouterLink} to={to}>{children}</Link>\n    </ListItem>\n  )\n}\n\nconst SiteNav = (props) => {\n  const isActive = path => {\n    return props.location.pathname === path ? 'nav-item--active' : null;\n  };\n\n  return (\n    <Box\n      as=\"nav\"\n    >\n      <List\n        d=\"flex\"\n      >\n        <MenuItem to=\"/users\" className={isActive('/users')}>Users</MenuItem>\n        <MenuItem to=\"/users/create\" className={isActive('/users/create')}>Create User</MenuItem>\n      </List>\n    </Box>\n  );\n};\n\nexport default withRouter(SiteNav);","import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = props => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import Logo from '../logo/logo.component';\nimport SiteNav from '../site-nav/site-nav.component';\nimport { ColorModeSwitcher } from '../color-mode/ColorModeSwitcher';\n\nimport { Box, Flex, useColorMode } from '@chakra-ui/react';\n\nconst Header = () => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      as=\"header\"\n      bg={colorMode === \"light\" ? \"white\" : \"gray.900\"}\n      boxShadow=\"rgba(0, 0, 0, 0.1) 0px 1px 2px 0px\"\n      zIndex=\"2\"\n    >\n      <Flex\n        justify=\"space-between\"\n        align=\"center\"\n        p=\"1em\"\n      >\n        <Logo />\n        <Flex\n          align=\"center\"\n          justifySelf=\"flex-end\"\n        >\n          <SiteNav />\n          <ColorModeSwitcher p={3} />\n        </Flex>\n      </Flex>\n    </Box>\n  );\n}\n\nexport default Header;","import { Flex, Box, Link } from '@chakra-ui/react';\n\nconst Footer = () => {\n  return (\n    <Box\n      as=\"footer\"\n      bg=\"gray.800\"\n      color=\"white\"\n      mt=\"3rem\"\n    >\n      <Flex\n        w=\"100%\"\n        maxW=\"1200px\"\n        p=\"2rem 1rem\"\n        mx=\"auto\"\n        h=\"100%\"\n      >\n        <Box>\n          &copy; <Link color=\"teal.200\" href=\"https://github.com/shljshlj\" target=\"_blank\" rel=\"noopener noreferrer\">shljshlj</Link> 2021\n        </Box>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Footer;","import { VStack } from '@chakra-ui/react';\n\nconst PageContent = ({ children }) => {\n  return (\n    <VStack\n      w=\"100%\"\n      maxW=\"900px\"\n      h=\"100%\"\n      px=\"1rem\"\n      py=\"2rem\"\n      mx=\"auto\"\n      spacing={10}\n    >\n      {children}\n    </VStack>\n  );\n};\n\nexport default PageContent;","import { Box } from \"@chakra-ui/react\"\n\nconst ContentSection = ({ children }) => {\n  return (\n    <Box\n      width=\"100%\"\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default ContentSection;","import { Heading } from \"@chakra-ui/react\";\n\nconst PageHeading = ({ children, ...rest }) => {\n  return (\n    <Heading\n      as=\"h1\"\n      size=\"xl\"\n      fontWeight=\"bold\"\n      mt=\"1em\"\n      mb=\"0.2em\"\n      pl=\"24px\"\n      letterSpacing=\"0.1em\"\n      alignSelf=\"flex-start\"\n      {...rest}\n    >\n      {children}\n    </Heading>\n  );\n};\n\nexport default PageHeading;","const BASE_URL = 'https://my-json-server.typicode.com/shljshlj/demo/users';\n\nclass UserService {\n  async getUsers() {\n    const res = await fetch(BASE_URL);\n    const users = await res.json();\n    return users;\n  }\n\n  async getUserDetails(id) {\n    const endpoint = `${BASE_URL}/${id}`;\n\n    try {\n      const res = await fetch(endpoint);\n      if (!res.ok) {\n        throw new Error(`Cannot get user. Status: ${res.statusText} (${res.status})`)\n      }\n      const user = await res.json();\n      return {\n        user,\n        error: null\n      };\n    } catch ({ message }) {\n      console.error(message);\n\n      return {\n        user: null,\n        error: message\n      }\n    }\n  }\n\n  async createUser(userData) {\n    try {\n      const res = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n\n      if (!res.ok) {\n        throw new Error(`User not created. ${res.statusText} (${res.status})`)\n      }\n      const user = await res.json();\n\n      return {\n        error: null,\n        user\n      }\n\n    } catch ({ message }) {\n      console.error(message);\n      return {\n        error: message,\n        user: null\n      }\n    }\n\n  }\n\n  async updateUser(id, userData) {\n    const endpoint = `${BASE_URL}/${id}`;\n\n    try {\n      const res = await fetch(endpoint, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userData)\n      });\n      console.log(res);\n\n      if (!res.ok) {\n        throw new Error(`User not updated. Status:  ${res.statusText} (${res.status})`)\n      }\n\n      const user = await res.json();\n      return {\n        error: null,\n        user\n      }\n    } catch ({ message }) {\n      console.error(message);\n      return {\n        error: message,\n        user: null\n      }\n    }\n\n  }\n\n  async deleteUser(id) {\n    const endpoint = `${BASE_URL}/${id}`;\n\n    try {\n      const res = await fetch(endpoint, {\n        method: 'DELETE'\n      });\n      if (!res.ok) {\n        throw new Error(`User not deleted. Status:  ${res.statusText} (${res.status})`);\n      }\n\n      return {\n        error: null\n      }\n    } catch ({ message }) {\n      console.error(message);\n\n      return {\n        error: message\n      }\n    }\n  }\n}\n\nexport const userService = new UserService();","import { Spinner } from \"@chakra-ui/react\";\n\nconst LoadingSpinner = () => {\n  return (\n    <Spinner\n      thickness=\"4px\"\n      speed=\"0.65s\"\n      emptyColor=\"gray.200\"\n      color=\"teal.500\"\n      size=\"lg\"\n    />\n  );\n};\n\nexport default LoadingSpinner;","import { Link as RouterLink } from 'react-router-dom';\n\nimport {\n  Square,\n  Tr,\n  Td,\n  Link,\n  Image,\n  useColorMode\n} from \"@chakra-ui/react\"\n\nconst UserItem = ({ user }) => {\n  const { colorMode } = useColorMode();\n\n  return (\n    <Tr borderWidth={{ \"base\": \"1px\", \"md\": \"0\" }} borderRadius={{ \"base\": \"lg\", \"md\": \"0\" }}>\n      <Td data-title=\"Id\" isNumeric>{user.id}</Td>\n      <Td data-title=\"Picture\">\n        <Link as={RouterLink} to={`/users/${user.id}`}>\n          <Square size=\"60px\" borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\">\n            <Image\n              loading=\"lazy\"\n              boxSize=\"100%\"\n              objectFit=\"cover\"\n              src={user.avatar || \"https://via.placeholder.com/100\"}\n              fallbackSrc=\"https://via.placeholder.com/100\"\n              alt={`Profile picture of ${user.fullName}`}\n            />\n          </Square>\n        </Link>\n      </Td>\n      <Td data-title=\"Full Name\">\n        <Link as={RouterLink} to={`/users/${user.id}`}>\n          {user.fullName}\n        </Link>\n      </Td>\n      <Td data-title=\"City\">{user.city}</Td>\n      <Td data-title=\"Email\" color={colorMode === \"light\" ? \"teal.600\" : \"teal.400\"}>{user.email}</Td>\n    </Tr>\n  );\n};\n\nexport default UserItem;","import { useState, useEffect } from 'react';\n\nimport { userService } from '../../services/userService';\n\nimport LoadingSpinner from '../loading-spinner/loading-spinner.component';\nimport UserItem from './user-item.component';\n\nimport './user-list.styles.css';\n\nimport {\n  Box,\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Text,\n  Center\n} from \"@chakra-ui/react\"\n\nconst UserList = () => {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async () => {\n      setLoading(true);\n      const users = await userService.getUsers();\n      setUsers(users);\n      setLoading(false);\n    }\n\n    getUsers();\n  }, [setUsers]);\n\n  return (\n    <Box\n      className=\"table-responsive\"\n      my=\"2rem\"\n    >\n      <Table variant=\"simple\" size=\"md\">\n        <Thead>\n          <Tr>\n            <Th isNumeric>Id</Th>\n            <Th>Picture</Th>\n            <Th>Full Name</Th>\n            <Th>City</Th>\n            <Th>Email Address</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {loading ?\n            (\n              <Tr>\n                <Td colSpan=\"5\">\n                  <Center>\n                    <LoadingSpinner />\n                  </Center>\n                </Td>\n              </Tr>\n            ) :\n            users.length !== 0 ?\n              users.map(user => <UserItem key={user.id} user={user} />) :\n              (\n                <Tr>\n                  <Td colSpan=\"5\">\n                    <Text fontSize=\"sm\" color=\"gray.600\" align=\"center\">There are no users to display</Text>\n                  </Td>\n                </Tr>\n              )\n          }\n        </Tbody>\n      </Table>\n    </Box>\n  );\n}\n\nexport default UserList;","import PageContent from '../../components/layouts/page-content.component';\nimport ContentSection from '../../components/layouts/content-section.component';\nimport PageHeading from '../../components/page-heading/page-heading.component';\n\nimport UserList from '../../components/user-list/user-list.component';\n\nconst UsersPage = () => {\n  return (\n    <PageContent>\n      <PageHeading>\n        List of Users\n        </PageHeading>\n      <ContentSection>\n        <UserList />\n      </ContentSection>\n    </PageContent>\n  );\n}\n\nexport default UsersPage;","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  Text,\n} from \"@chakra-ui/react\"\n\nfunction ModalMsg({ isOpen, onClose, body }) {\n  return (\n    <Modal Modal onClose={onClose} size=\"md\" isOpen={isOpen} isCentered >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalBody mt=\"2rem\" mb=\"3rem\" py=\"1rem\">\n          <Text\n            fontSize=\"xl\"\n            textAlign=\"center\"\n          >\n            {body}\n          </Text>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default ModalMsg;","import { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { userService } from '../../services/userService';\n\nimport PageContent from '../../components/layouts/page-content.component';\nimport LoadingSpinner from '../../components/loading-spinner/loading-spinner.component';\nimport ModalMsg from '../../components/modal-msg/modal-msg.component';\n\nimport { Box, Square, Flex, Heading, Image, Grid, GridItem, Text, HStack, Link, Button, ButtonGroup, Stack, useDisclosure } from '@chakra-ui/react';\n\nimport { PhoneIcon, EmailIcon, ExternalLinkIcon, EditIcon, DeleteIcon } from '@chakra-ui/icons'\n\nconst UserHeading = ({ fullName }) => {\n  return (\n    <Heading\n      as=\"h1\"\n      size=\"xl\"\n      letterSpacing=\"0.1em\"\n      mt=\"1em\"\n      textAlign={{ \"base\": \"center\", \"md\": \"start\" }}\n    >\n      {fullName}\n    </Heading>\n  );\n};\n\nconst JobTitle = ({ jobTitle }) => {\n  return (\n    <Text\n      mt=\"0.5em\"\n      color=\"gray\"\n      fontWeight=\"bold\"\n    >\n      {jobTitle}\n    </Text>\n  );\n};\n\nconst ProfileImage = ({ avatar, fullName }) => {\n  return (\n    <Square\n      mx=\"auto\"\n      maxW=\"170px\"\n      size={{ \"sm\": \"170px\" }}\n      borderWidth=\"4px\"\n      borderRadius=\"8px\"\n      overflow=\"hidden\"\n    >\n      <Image\n        loading=\"lazy\"\n        boxSize=\"100%\"\n        objectFit=\"cover\"\n        src={avatar || \"https://via.placeholder.com/150\"}\n        fallbackSrc=\"https://via.placeholder.com/150\"\n        alt={`Profile picture of ${fullName}`}\n      />\n    </Square>\n  );\n};\n\nconst ContentDivider = ({ dividerText }) => {\n  return (\n    <Box\n      borderBottom=\"1px\"\n      borderColor=\"gray.700\"\n      textTransform=\"uppercase\"\n      fontSize=\"lg\"\n      py={2}\n      mx={{ \"base\": \"1em\", \"md\": \"0\" }}\n      mt=\"1em\"\n      textAlign={{ \"base\": \"center\", \"md\": \"unset\" }}\n    >\n      {dividerText}\n    </Box>\n  );\n};\n\nconst ContactInfo = ({ phone, email, website }) => {\n  return (\n    <Box\n      mt=\"1rem\"\n    >\n      <HStack p={2} spacing={4}>\n        <PhoneIcon color=\"gray\" />\n        <Box as=\"span\">{phone}</Box>\n      </HStack>\n      <HStack p={2} spacing={4}>\n        <EmailIcon color=\"gray\" />\n        <Box as=\"span\" color=\"teal.500\">{email}</Box>\n      </HStack>\n      <HStack p={2} spacing={4}>\n        <ExternalLinkIcon color=\"gray\" />\n        <Box as=\"span\"><Link color=\"teal.500\">{website}</Link></Box>\n      </HStack>\n    </Box>\n  );\n};\n\nconst AddressInfo = ({ street, city, state, zip }) => {\n  return (\n    <Box\n      mt=\"1rem\"\n    >\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">Street:</Box>\n        <Box as=\"span\">{street}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">City:</Box>\n        <Box as=\"span\">{city}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">State:</Box>\n        <Box as=\"span\">{state}</Box>\n      </HStack>\n      <HStack py={2} spacing={12}>\n        <Box w=\"80px\" fontWeight=\"bold\">ZIP:</Box>\n        <Box as=\"span\">{zip}</Box>\n      </HStack>\n    </Box>\n  );\n};\n\nconst UserDetails = ({ user }) => {\n  const { avatar, fullName, phone, email, website, street, city, state, zip, jobTitle } = user;\n\n  return (\n    <Grid\n      templateColumns={{ \"base\": \"1fr\", \"md\": \"1fr 2fr\" }}\n      rowGap={4}\n      columnGap={8}\n      my=\"2rem\"\n      justifyItems={{ \"base\": \"center\", \"md\": \"unset\" }}\n    >\n      <GridItem>\n        <ProfileImage avatar={avatar} fullName={fullName} />\n      </GridItem>\n      <GridItem>\n        <Flex\n          direction=\"column\"\n          alignItems={{ \"base\": \"center\", \"md\": \"flex-start\" }}\n        >\n          <UserHeading fullName={fullName} />\n          <JobTitle jobTitle={jobTitle} />\n        </Flex>\n      </GridItem>\n      <GridItem\n        colStart={{ \"md\": 2 }}\n        justifySelf=\"stretch\"\n      >\n        <ContentDivider dividerText={'Contact Details'} />\n      </GridItem>\n      <GridItem>\n        <ContactInfo phone={phone} email={email} website={website} />\n      </GridItem>\n      <GridItem>\n        <AddressInfo street={street} city={city} state={state} zip={zip} />\n      </GridItem>\n    </Grid>\n  );\n};\n\nconst UserOptions = ({ id, routeChange, deleteUser }) => {\n  return (\n    <Flex\n      mt=\"4rem\"\n      justifyContent={{ \"base\": \"center\", \"md\": \"flex-end\" }}\n      borderTop=\"1px\"\n      borderColor=\"gray.700\"\n    >\n      <ButtonGroup\n        mt=\"2rem\"\n        mb={{ \"base\": \"2rem\", \"md\": \"1rem\" }}\n        size=\"sm\"\n      >\n        <Stack\n          direction={{ \"base\": \"column\", \"md\": \"row\" }}\n          py={2}\n          spacing={3}\n        >\n          <Button\n            leftIcon={<EditIcon />}\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"blue\"\n            variant=\"outline\"\n            onClick={() => routeChange(`/users/${id}/edit`)}\n          >\n            Edit User\n      </Button>\n          <Button\n            leftIcon={<DeleteIcon />}\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"red\"\n            variant=\"outline\"\n            onClick={() => deleteUser(id)}\n          >\n            Delete User\n      </Button>\n          <Button\n            height=\"40px\"\n            width=\"150px\"\n            colorScheme=\"teal\"\n            onClick={() => routeChange('/users/create')}\n          >\n            Create New User\n      </Button>\n        </Stack>\n      </ButtonGroup>\n    </Flex>\n  );\n};\n\nlet timeoutIdModal;\n\nfunction UserDetailsPage() {\n  const { id } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState({});\n  const history = useHistory();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const openModal = () => {\n    onOpen();\n    clearTimeout(timeoutIdModal);\n\n    timeoutIdModal = setTimeout(() => {\n      onClose();\n    }, 2000);\n  }\n\n  useEffect(() => {\n    const getUser = async () => {\n      setLoading(true);\n      const response = await userService.getUserDetails(id);\n\n      setErrorMsg({\n        userError: response.error\n      });\n      setUser(response.user);\n      setLoading(false);\n    }\n\n    getUser();\n  }, [id]);\n\n  const routeChange = (path) => {\n    history.push(path);\n  };\n\n  const deleteUser = async (id) => {\n    const response = await userService.deleteUser(id);\n\n    if (response.error) {\n      setErrorMsg({\n        ...errorMsg,\n        deleteError: response.error\n      });\n\n      openModal();\n    } else {\n      console.log('User deleted successfully!')\n      routeChange('/users');\n    }\n  };\n\n  return (\n    <PageContent>\n      {loading ?\n        <LoadingSpinner /> :\n        user ?\n          (\n            <Box\n              as=\"article\"\n              borderWidth=\"1px\"\n              borderRadius=\"lg\"\n              p={{ \"base\": 4, \"md\": \"3rem 4rem\" }}\n              width=\"100%\"\n              boxShadow=\"0 1px 2px rgba(0, 0, 0, 0.2)\"\n            >\n              <UserDetails user={user} />\n              <Box\n                as=\"footer\"\n              >\n                <UserOptions id={user.id} routeChange={routeChange} deleteUser={deleteUser} />\n              </Box>\n            </Box>\n          ) :\n          <Text as=\"h3\" textAlign=\"center\">{errorMsg.userError}</Text>\n      }\n      <ModalMsg isOpen={isOpen} onClose={onClose} body={errorMsg.deleteError} />\n    </PageContent>\n  );\n}\n\nexport default UserDetailsPage;","import faker from 'faker';\n\nexport const generateRandomData = (type) => {\n  const data = {\n    fullName: faker.name.findName(),\n    email: faker.internet.email().toLowerCase(),\n    avatar: faker.internet.avatar(),\n    jobTitle: faker.name.jobTitle(),\n    website: 'www.' + faker.internet.domainName(),\n    phone: faker.phone.phoneNumber(),\n    street: faker.address.streetAddress(),\n    city: faker.address.cityName(),\n    state: faker.address.state(),\n    zip: faker.address.zipCode()\n  };\n\n  return data[type];\n};\n\nexport const initialValues = {\n  fullName: '',\n  email: '',\n  avatar: '',\n  jobTitle: '',\n  website: '',\n  phone: '',\n  street: '',\n  city: '',\n  state: '',\n  zip: ''\n};\n\nexport const fields = {\n  fullName: {\n    id: 'fullName',\n    label: 'Full Name',\n    name: 'fullName',\n    type: 'text',\n    placeholder: 'Full name',\n    isFlex: true,\n    isFieldRequired: true\n  },\n  email: {\n    id: 'email',\n    label: 'Email',\n    name: 'email',\n    type: 'email',\n    placeholder: 'Email address',\n    isFlex: true,\n    isFieldRequired: true\n  },\n  avatar: {\n    id: 'avatar',\n    label: 'Picture URL',\n    name: 'avatar',\n    type: 'text',\n    placeholder: 'Picture URL',\n    isFlex: false,\n    isFieldRequired: false\n  },\n  jobTitle: {\n    id: 'jobTitle',\n    label: 'Job Title',\n    name: 'jobTitle',\n    type: 'text',\n    placeholder: 'Job title',\n    isFlex: false,\n    isFieldRequired: false\n  },\n  website: {\n    id: 'website',\n    label: 'Website',\n    name: 'website',\n    type: 'text',\n    placeholder: 'Personal website',\n    isFlex: true,\n    isFieldRequired: false\n  },\n  phone: {\n    id: 'phone',\n    label: 'Phone',\n    name: 'phone',\n    type: 'text',\n    placeholder: 'Phone number',\n    isFlex: true,\n    isFieldRequired: false\n  },\n  street: {\n    id: 'street',\n    label: 'Street',\n    name: 'street',\n    type: 'text',\n    placeholder: 'Street',\n    isFlex: false,\n    isFieldRequired: false\n  },\n  city: {\n    id: 'city',\n    label: 'City',\n    name: 'city',\n    type: 'text',\n    placeholder: 'City',\n    isFlex: true,\n    isFieldRequired: false\n  },\n  state: {\n    id: 'state',\n    label: 'State',\n    name: 'state',\n    type: 'text',\n    placeholder: 'State',\n    isFlex: true,\n    isFieldRequired: false\n  },\n  zip: {\n    id: 'zip',\n    label: 'ZIP Code',\n    name: 'zip',\n    type: 'text',\n    placeholder: 'ZIP code',\n    isFlex: true,\n    isFieldRequired: false\n  }\n};","import { RepeatIcon } from '@chakra-ui/icons';\nimport {\n  Flex,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  Tooltip\n} from '@chakra-ui/react';\n\nfunction FormField({\n  id,\n  label,\n  name,\n  type,\n  value,\n  placeholder,\n  handleChange,\n  isFlex = false,\n  isFieldRequired = false,\n  generate = null\n}) {\n  const optionsControl = isFlex && {\n    display: { \"md\": \"flex\" },\n    alignItems: { \"md\": \"center\" },\n    justifyContent: { \"md\": \"space-between\" }\n  };\n\n  const optionsLabel = isFlex && {\n    flexShrink: { \"md\": \"0\" }\n  };\n\n  const optionsInput = isFlex && {\n    width: { \"base\": \"100%\", \"md\": \"70%\" }\n  };\n\n  return (\n    <FormControl\n      {...optionsControl}\n      id={id}\n      isRequired={isFieldRequired}>\n      <FormLabel {...optionsLabel}>{label}</FormLabel>\n      <Flex\n        {...optionsInput}\n      >\n        <Input\n          required={isFieldRequired}\n          name={name}\n          type={type}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n        />\n        {\n          generate && (\n            <Tooltip label=\"Generate random\" placement=\"top-end\" openDelay={500}>\n              <IconButton\n                ml=\"0.5rem\"\n                colorScheme=\"teal\"\n                variant=\"link\"\n                aria-label={`Generate random ${name}`}\n                size=\"sm\"\n                icon={<RepeatIcon />}\n                onClick={() => generate(name)}\n              />\n            </Tooltip>\n          )\n        }\n      </Flex>\n    </FormControl>\n  );\n};\n\nexport default FormField;","import { useState, useEffect, useRef } from 'react';\n\nconst useCustomForm = ({ initialValues, onSubmit }) => {\n  const [values, setValues] = useState(initialValues || {});\n  const [errors, setErrors] = useState({});\n\n  const formRendered = useRef(true);\n\n  useEffect(() => {\n    if (formRendered.current) {\n      setValues(initialValues);\n      setErrors({});\n    }\n    formRendered.current = false;\n  }, [initialValues]);\n\n  const handleChange = (event) => {\n    event.persist();\n    const { target } = event;\n    const { name, value } = target;\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors({ ...errors });\n    onSubmit(values, errors);\n  }\n\n  return {\n    setValues,\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  };\n}\n\nexport default useCustomForm;","import { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { userService } from '../../services/userService';\n\nimport PageContent from '../../components/layouts/page-content.component';\nimport ContentSection from '../../components/layouts/content-section.component';\nimport PageHeading from '../../components/page-heading/page-heading.component';\n\nimport { fields } from '../../utils/data';\n\nimport {\n  Button,\n  Box,\n  Flex,\n  Stack,\n  Text,\n  ButtonGroup,\n  VStack,\n} from '@chakra-ui/react';\nimport FormField from '../../components/form/form-field.component';\nimport useCustomForm from '../../hooks/useCustomForm';\n\nconst validateName = (value) => {\n  let error;\n  const lettersRegExp = /^[A-Za-z ]+$/;\n  if (!value) {\n    error = 'Full name is required';\n  } else if (!lettersRegExp.test(value)) {\n    error = 'Please input alphabet characters only';\n  }\n  return error;\n};\n\nconst validateEmail = (value) => {\n  let error;\n  const emailRegExp = /^.+@.+\\..+$/;\n  if (!value) {\n    error = 'Email is required';\n  } else if (!emailRegExp.test(value)) {\n    error = 'Email has to contain \"@\". After \"@\" there should be some characters and \".\" and some more characters';\n  }\n  return error;\n};\n\n\nconst UserEditForm = ({ userId, user, routeChange }) => {\n  const initialValues = { ...user };\n\n  const handleUpdateUser = async (values) => {\n    const response = await userService.updateUser(userId, values);\n    if (response.error) {\n      console.log(response.error);\n    }\n\n    console.log('Success! User updated');\n\n    const { id } = response.user;\n    routeChange(`/users/${id}`);\n  }\n\n  const {\n    setValues,\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: handleUpdateUser\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Flex direction=\"column\" alignItems=\"stretch\">\n        <Box p={4} mb={5} borderRadius=\"lg\" borderWidth=\"1px\">\n          <Text color=\"teal.500\" mb=\"2rem\">\n            Required Fields\n        </Text>\n          <VStack spacing={4}>\n            <FormField {...fields.fullName} value={values.fullName} handleChange={handleChange} />\n            <FormField {...fields.email} value={values.email} handleChange={handleChange} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5}>\n          <VStack spacing={4}>\n            <FormField {...fields.avatar} value={values.avatar} handleChange={handleChange} />\n            <FormField {...fields.jobTitle} value={values.jobTitle} handleChange={handleChange} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5}>\n          <VStack spacing={4}>\n            <FormField {...fields.website} value={values.website} handleChange={handleChange} />\n            <FormField {...fields.phone} value={values.phone} handleChange={handleChange} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5} borderRadius=\"lg\" borderWidth=\"1px\">\n          <Text color=\"teal.500\" mb=\"2rem\">\n            Address\n        </Text>\n          <VStack spacing={4}>\n            <FormField {...fields.street} value={values.street} handleChange={handleChange} />\n            <FormField {...fields.city} value={values.city} handleChange={handleChange} />\n            <FormField {...fields.state} value={values.state} handleChange={handleChange} />\n            <FormField {...fields.zip} value={values.zip} handleChange={handleChange} />\n          </VStack>\n        </Box>\n      </Flex>\n      <Flex\n        justifyContent={{ \"base\": \"center\", \"md\": \"flex-end\" }}\n        p={4}\n      >\n        <ButtonGroup\n          size=\"sm\"\n        >\n          <Stack\n            direction={{ \"base\": \"row\" }}\n            py={2}\n            spacing={6}\n          >\n            <Button\n              height=\"40px\"\n              width=\"150px\"\n              colorScheme=\"blue\"\n              variant=\"outline\"\n              onClick={() => routeChange('/users')}\n            >\n              Cancel\n            </Button>\n            <Button\n              height=\"40px\"\n              width=\"150px\"\n              colorScheme=\"teal\"\n              type=\"submit\"\n            >\n              Submit\n      </Button>\n          </Stack>\n        </ButtonGroup>\n      </Flex>\n    </form>\n  )\n};\n\nconst UserName = ({ fullName }) => {\n  return (\n    <Text\n      as=\"span\"\n      color=\"teal.500\"\n    >\n      {fullName}\n    </Text>\n  );\n};\n\nconst UserEditPage = () => {\n  const { id } = useParams();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const routeChange = (path) => {\n    history.push(path);\n  };\n\n  useEffect(() => {\n    const getUser = async () => {\n      setLoading(true);\n      const response = await userService.getUserDetails(id);\n      setUser(response.user);\n      setLoading(false);\n    }\n\n    getUser();\n  }, [id]);\n\n  return (\n    <PageContent>\n      <PageHeading>\n        Edit User {user && <UserName fullName={user.fullName} />}\n      </PageHeading>\n      <ContentSection>\n        {\n          loading ?\n            <div>Loading...</div> :\n            user ?\n              <UserEditForm userId={id} user={user} routeChange={routeChange} /> :\n              <div>User data is not available</div>\n        }\n      </ContentSection>\n    </PageContent>\n\n  );\n}\n\nexport default UserEditPage;","import { useHistory } from 'react-router-dom';\nimport useCustomForm from '../../hooks/useCustomForm';\nimport { userService } from '../../services/userService';\n\nimport PageContent from '../../components/layouts/page-content.component';\nimport ContentSection from '../../components/layouts/content-section.component';\nimport PageHeading from '../../components/page-heading/page-heading.component';\nimport FormField from '../../components/form/form-field.component';\n\nimport { initialValues, generateRandomData, fields } from '../../utils/data';\n\nimport {\n  Button,\n  Box,\n  Flex,\n  Stack,\n  Text,\n  VStack,\n  ButtonGroup\n} from '@chakra-ui/react';\n\n\n\nconst UserCreateForm = ({ routeChange }) => {\n  const handleCreateUser = async (values) => {\n    const response = await userService.createUser(values);\n    if (response.error) {\n      console.log(response.error);\n    }\n\n    console.log('Success! User created');\n\n    const { id } = response.user;\n    routeChange(`/users`);\n  }\n\n  const {\n    setValues,\n    values,\n    errors,\n    handleChange,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: handleCreateUser\n  });\n\n  const generateFieldData = (type) => {\n    const data = generateRandomData(type);\n    setValues({ ...values, [type]: data });\n    return data;\n  };\n\n  const resetFields = () => {\n    setValues({ ...initialValues });\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Flex direction=\"column\" alignItems=\"stretch\">\n        <Box p={4} mb={5} borderRadius=\"lg\" borderWidth=\"1px\">\n          <Text color=\"teal.500\" mb=\"2rem\">\n            Required Fields\n        </Text>\n          <VStack spacing={4}>\n            <FormField {...fields.fullName} value={values.fullName} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.email} value={values.email} handleChange={handleChange} generate={generateFieldData} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5}>\n          <VStack spacing={4}>\n            <FormField {...fields.avatar} value={values.avatar} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.jobTitle} value={values.jobTitle} handleChange={handleChange} generate={generateFieldData} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5}>\n          <VStack spacing={4}>\n            <FormField {...fields.website} value={values.website} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.phone} value={values.phone} handleChange={handleChange} generate={generateFieldData} />\n          </VStack>\n        </Box>\n\n        <Box p={4} mb={5} borderRadius=\"lg\" borderWidth=\"1px\">\n          <Text color=\"teal.500\" mb=\"2rem\">\n            Address\n        </Text>\n          <VStack spacing={4}>\n            <FormField {...fields.street} value={values.street} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.city} value={values.city} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.state} value={values.state} handleChange={handleChange} generate={generateFieldData} />\n            <FormField {...fields.zip} value={values.zip} handleChange={handleChange} generate={generateFieldData} />\n          </VStack>\n        </Box>\n      </Flex>\n      <Flex\n        justifyContent={{ \"base\": \"center\", \"md\": \"flex-end\" }}\n        p={4}\n      >\n        <ButtonGroup\n          size=\"sm\"\n        >\n          <Stack\n            direction={{ \"base\": \"row\" }}\n            py={2}\n            spacing={6}\n          >\n            <Button\n              height=\"40px\"\n              width=\"150px\"\n              colorScheme=\"blue\"\n              variant=\"outline\"\n              onClick={resetFields}\n            >\n              Reset All\n            </Button>\n            <Button\n              height=\"40px\"\n              width=\"150px\"\n              colorScheme=\"teal\"\n              type=\"submit\"\n            >\n              Submit\n      </Button>\n          </Stack>\n        </ButtonGroup>\n      </Flex>\n    </form>\n  )\n}\n\nconst UserCreatePage = () => {\n  const history = useHistory();\n\n  const routeChange = (path) => {\n    history.push(path);\n  };\n\n  return (\n    <PageContent>\n      <PageHeading>\n        Create New User\n      </PageHeading>\n      <ContentSection>\n        <UserCreateForm routeChange={routeChange} />\n      </ContentSection>\n    </PageContent>\n\n  );\n}\n\nexport default UserCreatePage;","import useCustomForm from '../../hooks/useCustomForm';\n\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Button,\n  Box,\n  Flex,\n  Stack,\n  Heading,\n  Text,\n  Divider,\n  Link,\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverArrow,\n  PopoverCloseButton,\n  useColorMode\n} from '@chakra-ui/react';\n\nconst initialValues = {\n  email: ''\n};\n\n\nconst LoginPage = ({\n  authToken,\n  setAuthToken,\n  setHasLogged\n}) => {\n  const { colorMode } = useColorMode();\n  const loginUser = (loginData) => {\n    try {\n      if (authToken) {\n        if (loginData.email !== authToken) {\n          console.log(loginData)\n          throw new Error(\"Email is not matching\");\n        }\n        else {\n          setHasLogged();\n        }\n      } else {\n        setAuthToken(loginData.email);\n        setHasLogged();\n      }\n    }\n    catch (err) {\n      console.log(err);\n      console.log(errors);\n    }\n  }\n\n  const {\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit\n  } = useCustomForm({\n    initialValues,\n    onSubmit: loginUser\n  });\n\n\n\n  return (\n    <Flex\n      w=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      height=\"100vh\"\n      px={{ sm: 8 }}\n      bg={colorMode === \"light\" ? \"#fffaf6\" : \"gray.500\"}\n    >\n      <Flex\n        direction=\"column\"\n        alignItems=\"stretch\"\n        justifyContent={{ base: \"center\", sm: \"flex-start\" }}\n        height={{ base: \"100%\", sm: \"unset\" }}\n        width=\"100%\"\n        maxWidth=\"500px\"\n        borderRadius={{ sm: \"lg\" }}\n        borderWidth={{ sm: \"1px\" }}\n        bg={colorMode === \"light\" ? \"white\" : \"gray.700\"}\n        p={8}\n        mt={{ sm: \"-20%\" }}\n      >\n        <Box\n          textAlign=\"center\"\n          mt=\"1rem\"\n          mb=\"3rem\"\n        >\n          <Heading\n            as=\"h1\"\n            mb=\"0.5rem\"\n          >\n            Users App\n        </Heading>\n          <Text fontSize=\"md\">\n            Sign in with email to manage users data\n        </Text>\n        </Box>\n\n        <form onSubmit={handleSubmit}>\n          <Stack spacing={6} alignItems=\"stretch\">\n            <FormControl id=\"email\" isRequired>\n              <FormLabel>Email Address</FormLabel>\n              <Input\n                required\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Enter your email address\"\n                value={values.email}\n                onChange={handleChange}\n              />\n            </FormControl>\n\n            <Button colorScheme=\"teal\" type=\"submit\">Sign In</Button>\n\n            <Divider />\n\n            <Popover>\n              <PopoverTrigger>\n                <Link fontSize=\"sm\" textAlign=\"center\">Forgot your email?</Link>\n              </PopoverTrigger>\n              <PopoverContent>\n                <PopoverArrow />\n                <PopoverCloseButton />\n                <PopoverHeader\n                  px={4}\n                  pt={4}\n                  fontWeight=\"bold\"\n                  fontSize=\"sm\"\n                  borderBottom=\"1px\"\n                  borderColor=\"teal.100\"\n                >\n                  Email used to login:\n                </PopoverHeader>\n                <PopoverBody p={4}>\n                  {authToken ? authToken : 'You haven\\'t sign in before'}\n                </PopoverBody>\n              </PopoverContent>\n            </Popover>\n          </Stack>\n        </form>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default LoginPage;","import { Flex } from '@chakra-ui/react';\n\nconst PageLayout = (props) => {\n  return (\n    <Flex\n      direction=\"column\"\n      w=\"100%\"\n      minH=\"100vh\"\n    >\n      {props.children}\n    </Flex>\n  )\n};\n\nexport default PageLayout;","import { Box } from \"@chakra-ui/react\"\n\nconst PageContainer = (props) => {\n  return (\n    <Box\n      as=\"main\"\n      flex=\"1\"\n    >\n      {props.children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import { useState } from 'react';\n\nconst useAuth = () => {\n  const getItemFromStorage = (item, typeOfStorage) => {\n    const itemString = typeOfStorage.getItem(item);\n    const itemValue = JSON.parse(itemString);\n\n    return itemValue;\n  };\n\n  const [authToken, setAuthToken] = useState(getItemFromStorage('authToken', localStorage));\n  const [hasLogged, setHasLogged] = useState(getItemFromStorage('hasLogged', sessionStorage));\n\n  const saveAuthToken = (userAuthToken) => {\n    localStorage.setItem('authToken', JSON.stringify(userAuthToken));\n    setAuthToken(userAuthToken);\n  };\n\n  const saveHasLogged = () => {\n    sessionStorage.setItem('hasLogged', JSON.stringify(true));\n    setHasLogged(true);\n  };\n\n  return {\n    authToken,\n    setAuthToken: saveAuthToken,\n    hasLogged,\n    setHasLogged: saveHasLogged\n  }\n\n}\n\n\nexport default useAuth;","import { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { ChakraProvider, theme, } from '@chakra-ui/react';\n\nimport Header from './components/header/header.component';\nimport Footer from './components/footer/footer.component'\nimport UsersPage from './pages/users/users.component';\nimport UserDetailsPage from './pages/user-details/user-details.component';\nimport UserEditPage from './pages/user-edit/user-edit.component';\nimport UserCreatePage from './pages/user-create/user-create.component';\nimport LoginPage from './pages/login/login.component';\nimport PageLayout from './components/layouts/page-layout.component';\nimport PageContainer from './components/layouts/page-container.component';\n\nimport useAuth from './hooks/useAuth';\n\nfunction App() {\n  const {\n    authToken,\n    setAuthToken,\n    hasLogged,\n    setHasLogged\n  } = useAuth();\n\n\n  if (!hasLogged || !authToken) {\n    return (\n      <ChakraProvider theme={theme}>\n        <LoginPage authToken={authToken} setAuthToken={setAuthToken} setHasLogged={setHasLogged} />\n      </ChakraProvider>\n    );\n  }\n\n  return (\n    <ChakraProvider theme={theme}>\n      <BrowserRouter basename='/users-app'>\n        <PageLayout>\n          <Header />\n          <PageContainer>\n            <Switch>\n              <Route exact path='/' render={() =>\n                <Redirect to='/users' />}\n              />\n              <Route exact path='/users' component={UsersPage} />\n              <Route exact path='/users/create' component={UserCreatePage} />\n              <Route exact path='/users/:id' component={UserDetailsPage} />\n              <Route exact path='/users/:id/edit' component={UserEditPage} />\n            </Switch>\n          </PageContainer>\n          <Footer />\n        </PageLayout>\n      </BrowserRouter>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}